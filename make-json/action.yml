name: "Make JSON from releases"
author: "Igor Pecovnik"
description: "Make JSON from releases"
inputs:
  filename:
    description: Filename
    required: true
runs:
  using: "composite"
  steps:

    - name: Install dependencies
      shell: bash      
      run: |

        echo ${{ inputs.filename }}
        sudo npm install --location=global json || true
        gh release list | awk '{print $1}'

        function listings
        {
          cd community
          gh release view --json assets 2>/dev/null | python3 -mjson.tool | sed  '1,2d;$d' | json -ga name url size updatedAt -d, | sort | grep $3 | (
          while read -r line; do
                  name=$(echo $line | cut -d"," -f1 | awk '{print tolower($0)}')
                  url=$(echo $line | cut -d"," -f2)
                  size=$(echo $line | cut -d"," -f3)
                  updated=$(echo $line | cut -d"," -f4)
                    if [[ "${name: -3}" == ".xz" ]]; then
                      board_name=$(echo $name | cut -d"_" -f3)
                      source ../build/config/boards/$board_name.*
                      out_release=$(echo $name | cut -d"_" -f4)
                      out_branch=$(echo $name | cut -d"_" -f5)
                      out_kernel=$(echo $name | cut -d"_" -f6-7 | cut -d"." -f1-3 | cut -d"_" -f1)
                      out_desktop=$(echo $name | cut -d"_" -f7- | cut -d"." -f1 | cut -d"_" -f1)
                      out_size=$(echo "scale=0; $size/1024/1024" | bc -l)"M"
                      # outputs
                      echo -ne "${board_name}/${out_release^}_${out_branch}$([[ -n "${out_desktop}" ]] && echo "_")${out_desktop}_nightly|$url|"$(date -d $updated +"%s")"|$out_size|\n" >> $1
                      out_desktop=${out_desktop:-cli}
                      echo -ne "| [$BOARD_NAME]($url#$board_name) | [:file_folder:]($url".asc") | [:file_folder:]($url".sha") | $out_release | $out_branch | $out_desktop | $out_size | $out_kernel |\n" >> $2
                    fi
                    done
                    )
          cd ..
        }
