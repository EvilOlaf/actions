name: "Build list"
author: "Igor Pecovnik"
description: "Build list of various build targets"
inputs:
  type:
    description: "conf,csc,tvb"
    required: true
runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 1
        repository: armbian/distribution
        path: distribution
        clean: false
    - name: "Check released"
      id: check-released
      shell: bash
      run: |
        sudo apt -y update
        sudo apt -y install npm
        sudo npm install --location=global json || true
        truncate targets-present.txt targets-boards.txt --size=0 || true
        gh release view $(gh release list | awk '{print $1}' | head -1) --json assets 2>/dev/null | python3 -mjson.tool | sed  '1,2d;$d' | json -ga name url -d, | sort | (
          while read -r line; do
           name=$(echo $line | cut -d"," -f1)
           url=$(echo $line | cut -d"," -f2)
           if [ "${name: -3}" == ".xz" ]; then
             out_name=$(echo $name | cut -d"_" -f3 | awk '{print tolower($0)}')
             out_release=$(echo $name | cut -d"_" -f4)
             out_branch=$(echo $name | cut -d"_" -f5)
             out_kernel=$(echo $name | cut -d"_" -f6-7 | cut -d"." -f1-3 | cut -d"_" -f1)
             out_desktop=$(echo $name | cut -d"_" -f7)
             echo -ne "$out_name $out_branch $out_release $out_desktop\n" >> targets-present.txt
             echo -ne "$out_name" >> targets-boards.txt
           fi
          done
          ) 
    - name: "Build images"
      id: build-images
      run: |
        truncate targets.txt boards.txt --size=0
        string=($(find build/config/boards/ -mindepth 1 -maxdepth 1 -type f -iregex '.*\.\(tvb\|csc\|wip\)$' 2> /dev/null | sort | cut -d"/" -f4 | cut -d"." -f1))
        release=("jammy" "sid")
       
        for j in ${string[@]}
        do
          for k in ${release[@]}
          do
            branch="current"
            KERNEL=$(cat build/config/boards/$j.* | grep KERNEL_TARGET || true)
            DESKTOP=$(cat build/config/boards/$j.* | grep BUILD_DESKTOP || true)
            if [[ -z "$(echo $KERNEL | grep $branch)" ]]; then
                branch=$(echo "$KERNEL" | sed 's/"//g' | cut -d"=" -f2)
            fi
            if [[ -n "$(echo $DESKTOP | grep no)" ]]; then
            de=("cli")
            else
            de=("cli" "xfce")
            fi
              for l in ${de[@]}
              do
                if [[ $l == cli ]]; then         
                l="cli     "
                m=""
                else
                l="desktop"
                m=" xfce config_base 3dsupport,browsers"
                fi
              echo "$j   $branch    $k    $l  stable  yes $m" >> targets.txt
              echo "$j" >> boards.txt
            done
          done
        done
      shell: bash
